{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","redux/actions.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","redux/reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","connect","dispatch","onSubmit","actions","useState","setName","setNumber","handleChange","event","currentTarget","value","className","styles","form","preventDefault","labelName","input","type","onChange","btn","disabled","state","filter","contacts","onFilter","target","label","visibleContacts","allContacts","normalizeFilter","toLowerCase","includes","getVisibleContacts","items","onDeleteContact","contactId","map","item","onClick","App","createReducer","some","alert","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","querySelector"],"mappings":"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","file":"static/js/main.e08e283f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__1Xk4q\",\"item\":\"ContactList_item__3YsZK\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('phoneBook/addContact', (name, number) => {\n  return {\n    payload: {\n      id: uuidv4(),\n      name,\n      number,\n    },\n  };\n});\nconst deleteContact = createAction('phoneBook/deleteContact');\nconst changeFilter = createAction('phoneBook/filterContacts');\n\nexport default { addContact, deleteContact, changeFilter };\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = function ({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n    }\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit(name, number);\n    resetState();\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.labelName}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n\n      <button\n        className={styles.btn}\n        type=\"submit\"\n        disabled={!(name && number) && true}\n      >\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/actions';\n\nimport styles from './Filter.module.css';\n\nconst Filter = ({ onFilter, filter }) => {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onFilter}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  onFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFilter: event => dispatch(actions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ onDeleteContact, visibleContacts }) => {\n  return (\n    <ul>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li className={styles.item} key={id}>\n          {name}: {number}\n          <button\n            className={styles.btn}\n            type=\"button\"\n            name={id}\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  visibleContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizeFilter = filter.toLowerCase();\n\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizeFilter),\n  );\n};\n\nconst mapStateToProps = state => {\n  const { filter, items } = state.contacts;\n  const visibleContacts = getVisibleContacts(items, filter);\n\n  return {\n    visibleContacts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteContact: contactId => dispatch(actions.deleteContact(contactId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import PropTypes from 'prop-types';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nconst App = function () {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  filter: PropTypes.string,\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => {\n    const isAlreadyInContacts = state.some(({ name }) => name === payload.name);\n\n    if (isAlreadyInContacts) {\n      return alert(`${payload.name} is already in contacts`);\n    } else {\n      return [...state, payload];\n    }\n  },\n\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\nimport contactsReducer from './reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/es/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"labelName\":\"ContactForm_labelName__3V3cS\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};"],"sourceRoot":""}